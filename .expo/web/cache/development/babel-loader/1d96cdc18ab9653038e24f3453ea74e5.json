{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AuthContext = createContext({\n  token: \"\",\n  isAuthenticated: false,\n  authenticate: function authenticate(token) {},\n  logout: function logout() {}\n});\n\nfunction AuthContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      authToken = _useState2[0],\n      setAuthToken = _useState2[1];\n\n  function authenticate(token) {\n    setAuthToken(token);\n    AsyncStorage.setItem(\"token\", token);\n  }\n\n  function logout() {\n    setAuthToken(null);\n    AsyncStorage.removeItem(\"token\");\n  }\n\n  var value = {\n    token: authToken,\n    isAuthenticated: !!authToken,\n    authenticate: authenticate,\n    logout: logout\n  };\n  return _jsx(AuthContext.Provider, {\n    value: value,\n    children: children\n  });\n}\n\nexport default AuthContextProvider;","map":{"version":3,"names":["AsyncStorage","createContext","useEffect","useState","AuthContext","token","isAuthenticated","authenticate","logout","AuthContextProvider","children","authToken","setAuthToken","setItem","removeItem","value"],"sources":["/Users/elodiepradet/Documents/react native/Fridgeease/store/context/auth-context.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createContext, useEffect, useState } from \"react\";\nexport const AuthContext = createContext({\n  token: \"\",\n  isAuthenticated: false,\n  authenticate: (token) => {},\n  logout: () => {},\n});\n\nfunction AuthContextProvider({ children }) {\n  const [authToken, setAuthToken] = useState();\n\n  function authenticate(token) {\n    setAuthToken(token);\n    AsyncStorage.setItem(\"token\", token);\n  }\n\n  function logout() {\n    setAuthToken(null);\n    AsyncStorage.removeItem(\"token\");\n  }\n\n  const value = {\n    token: authToken,\n    isAuthenticated: !!authToken,\n    authenticate: authenticate,\n    logout: logout,\n  };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport default AuthContextProvider;\n\n/*import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createContext, useEffect, useState } from \"react\";\n\nexport const AuthContext = createContext({\n  token: \"\",\n  isAuthenticated: false,\n  authenticate: (token) => {},\n  logout: () => {},\n});\n\nfunction AuthContextProvider({ children }) {\n  const [authToken, setAuthToken] = useState();\n\n  function authenticate(token) {\n    setAuthToken(token);\n    AsyncStorage.setItem(\"token\", token);\n  }\n\n  function logout() {\n    setAuthToken(null);\n    AsyncStorage.removeItem(\"token\");\n  }\n\n  const value = {\n    token: authToken,\n    isAuthenticated: !!authToken,\n    authenticate: authenticate,\n    logout: logout,\n  };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport default AuthContextProvider;\n*/\n\n/*\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { createContext, useEffect, useState } from \"react\";\n\nexport const AuthContext = createContext();\nexport const AuthProvider = ({ children }) => {\n  const [userInfo, setUserInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [splashLoading, setSplashLoading] = useState(false);\n\n  const register = (email, password) => {\n    setIsLoading(true);\n    axios\n      .post(\"https://c886-213-163-151-83.eu.ngrok.io/api/user/register\", {\n        email,\n        password,\n      })\n      .then((res) => {\n        let userInfo = res.data;\n        setUserInfo(userInfo);\n        AsyncStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n        setIsLoading(false);\n        console.log(userInfo);\n      })\n      .catch((e) => {\n        console.log(`register error ${e}`);\n        setIsLoading(false);\n      });\n  };\n\n  const login = (email, password) => {\n    axios\n      .post(\"https://c886-213-163-151-83.eu.ngrok.io/api/user/login\", {\n        email,\n        password,\n      })\n      .then((res) => {\n        let userInfo = res.data;\n        console.log(userInfo);\n        setUserInfo(userInfo);\n        AsyncStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n      })\n      .catch((e) => {\n        console.log(`login error ${e}`);\n      });\n  };\n\n  const logout = () => {\n    axios\n      .get(\"https://c886-213-163-151-83.eu.ngrok.io/api/user/logout\")\n      .then((res) => {\n        console.log(res.data);\n        AsyncStorage.removeItem(\"userInfo\");\n        setUserInfo({});\n      })\n      .catch((e) => {\n        console.log(`logout error ${e}`);\n      });\n  };\n\n  const isLoggedIn = async () => {\n    try {\n      setSplashLoading(true);\n\n      let userInfo = await AsyncStorage.getItem(\"userInfo\");\n      userInfo = JSON.parse(userInfo);\n\n      if (userInfo) {\n        setUserInfo(userInfo);\n      }\n\n      setSplashLoading(false);\n    } catch (e) {\n      setSplashLoading(false);\n      console.log(`is logged in error ${e}`);\n    }\n  };\n\n  useEffect(() => {\n    isLoggedIn();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoading,\n        userInfo,\n        splashLoading,\n        register,\n        login,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};*/\n"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AACA,OAAO,IAAMC,WAAW,GAAGH,aAAa,CAAC;EACvCI,KAAK,EAAE,EADgC;EAEvCC,eAAe,EAAE,KAFsB;EAGvCC,YAAY,EAAE,sBAACF,KAAD,EAAW,CAAE,CAHY;EAIvCG,MAAM,EAAE,kBAAM,CAAE;AAJuB,CAAD,CAAjC;;AAOP,SAASC,mBAAT,OAA2C;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EACzC,gBAAkCP,QAAQ,EAA1C;EAAA;EAAA,IAAOQ,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,SAASL,YAAT,CAAsBF,KAAtB,EAA6B;IAC3BO,YAAY,CAACP,KAAD,CAAZ;IACAL,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;EACD;;EAED,SAASG,MAAT,GAAkB;IAChBI,YAAY,CAAC,IAAD,CAAZ;IACAZ,YAAY,CAACc,UAAb,CAAwB,OAAxB;EACD;;EAED,IAAMC,KAAK,GAAG;IACZV,KAAK,EAAEM,SADK;IAEZL,eAAe,EAAE,CAAC,CAACK,SAFP;IAGZJ,YAAY,EAAEA,YAHF;IAIZC,MAAM,EAAEA;EAJI,CAAd;EAMA,OAAO,KAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEO,KAA7B;IAAA,UAAqCL;EAArC,EAAP;AACD;;AAED,eAAeD,mBAAf"},"metadata":{},"sourceType":"module"}