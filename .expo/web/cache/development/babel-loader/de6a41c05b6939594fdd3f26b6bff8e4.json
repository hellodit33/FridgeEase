{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatButton from \"../../UI/FlatButton\";\nimport Input from \"./Input\";\nimport Colors from \"../../../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AuthForm(_ref) {\n  var isLogin = _ref.isLogin,\n      onSubmit = _ref.onSubmit,\n      credentialsInvalid = _ref.credentialsInvalid;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredEmail = _useState2[0],\n      setEnteredEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      enteredPassword = _useState4[0],\n      setEnteredPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      enteredConfirmPassword = _useState6[0],\n      setEnteredConfirmPassword = _useState6[1];\n\n  var emailIsInvalid = credentialsInvalid.email,\n      passwordIsInvalid = credentialsInvalid.password,\n      passwordsDontMatch = credentialsInvalid.confirmPassword;\n\n  function updateInputValueHandler(inputType, enteredValue) {\n    switch (inputType) {\n      case \"email\":\n        setEnteredEmail(enteredValue);\n        break;\n\n      case \"password\":\n        setEnteredPassword(enteredValue);\n        break;\n\n      case \"confirmPassword\":\n        setEnteredConfirmPassword(enteredValue);\n        break;\n    }\n  }\n\n  function submitHandler() {\n    onSubmit({\n      email: enteredEmail,\n      password: enteredPassword,\n      confirmPassword: enteredConfirmPassword\n    });\n  }\n\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    children: [_jsxs(View, {\n      style: styles.titleContainer,\n      children: [_jsx(Image, {\n        source: require(\"../../../assets/icon2.png\"),\n        style: styles.imageTitle\n      }), isLogin ? _jsx(Text, {\n        style: styles.title,\n        children: \"Logga in\"\n      }) : _jsx(Text, {\n        style: styles.title,\n        children: \"Bli medlem\"\n      })]\n    }), _jsxs(ScrollView, {\n      children: [_jsx(Input, {\n        style: styles.input,\n        label: \"E-mail\",\n        onUpdateValue: updateInputValueHandler.bind(this, \"email\"),\n        value: enteredEmail,\n        keyboardType: \"email-address\",\n        isInvalid: emailIsInvalid,\n        placeholder: \"exempel@gmail.com\",\n        placeholderTextColor: Colors.green\n      }), _jsx(Input, {\n        style: styles.input,\n        label: \"L\\xF6senord\",\n        onUpdateValue: updateInputValueHandler.bind(this, \"password\"),\n        secure: true,\n        value: enteredPassword,\n        isInvalid: passwordIsInvalid,\n        placeholder: \"L\\xF6senord\",\n        placeholderTextColor: Colors.green\n      }), isLogin && _jsx(View, {\n        style: styles.flat,\n        children: _jsx(FlatButton, {\n          children: \"Gl\\xF6mt l\\xF6senordet?\"\n        })\n      }), !isLogin && _jsx(Input, {\n        label: \"Bekr\\xE4fta ditt l\\xF6senord\",\n        onUpdateValue: updateInputValueHandler.bind(this, \"confirmPassword\"),\n        secure: true,\n        placeholder: \"L\\xF6senord\",\n        value: enteredConfirmPassword,\n        isInvalid: passwordsDontMatch,\n        placeholderTextColor: Colors.green\n      }), _jsx(View, {\n        style: styles.buttons,\n        children: _jsx(FlatButton, {\n          onPress: submitHandler,\n          style: styles.flatbutton,\n          children: isLogin ? \"Logga in\" : \"Bli medlem\"\n        })\n      })]\n    })]\n  });\n}\n\nexport default AuthForm;\nvar styles = StyleSheet.create({\n  titleContainer: {\n    maxHeight: 300,\n    marginTop: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    color: Colors.green,\n    fontWeight: \"bold\",\n    marginBottom: 30\n  },\n  imageTitle: {\n    width: \"50%\",\n    height: \"50%\",\n    resizeMode: \"contain\",\n    marginTop: 0\n  },\n  flat: {\n    alignItems: \"flex-end\",\n    paddingVertical: 0,\n    marginVertical: 0,\n    justifyContent: \"flex-end\"\n  },\n  buttons: {\n    backgroundColor: Colors.greywhite,\n    borderRadius: 120,\n    paddingVertical: 10,\n    borderColor: \"black\",\n    borderWidth: 1\n  },\n  flatbutton: {\n    color: Colors.green\n  }\n});","map":{"version":3,"names":["useState","FlatButton","Input","Colors","AuthForm","isLogin","onSubmit","credentialsInvalid","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","enteredConfirmPassword","setEnteredConfirmPassword","emailIsInvalid","email","passwordIsInvalid","password","passwordsDontMatch","confirmPassword","updateInputValueHandler","inputType","enteredValue","submitHandler","Platform","OS","styles","titleContainer","require","imageTitle","title","input","bind","green","flat","buttons","flatbutton","StyleSheet","create","maxHeight","marginTop","alignItems","justifyContent","fontSize","color","fontWeight","marginBottom","width","height","resizeMode","paddingVertical","marginVertical","backgroundColor","greywhite","borderRadius","borderColor","borderWidth"],"sources":["/Users/elodiepradet/Documents/react native/Fridgeease/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\n\nimport FlatButton from \"../../UI/FlatButton\";\nimport Input from \"./Input\";\nimport Colors from \"../../../constants/Colors\";\n\nfunction AuthForm({ isLogin, onSubmit, credentialsInvalid }) {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [enteredConfirmPassword, setEnteredConfirmPassword] = useState(\"\");\n\n  const {\n    email: emailIsInvalid,\n\n    password: passwordIsInvalid,\n    confirmPassword: passwordsDontMatch,\n  } = credentialsInvalid;\n\n  function updateInputValueHandler(inputType, enteredValue) {\n    switch (inputType) {\n      case \"email\":\n        setEnteredEmail(enteredValue);\n        break;\n\n      case \"password\":\n        setEnteredPassword(enteredValue);\n        break;\n      case \"confirmPassword\":\n        setEnteredConfirmPassword(enteredValue);\n        break;\n    }\n  }\n\n  function submitHandler() {\n    onSubmit({\n      email: enteredEmail,\n      password: enteredPassword,\n      confirmPassword: enteredConfirmPassword,\n    });\n  }\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n    >\n      <View style={styles.titleContainer}>\n        <Image\n          source={require(\"../../../assets/icon2.png\")}\n          style={styles.imageTitle}\n        />\n        {isLogin ? (\n          <Text style={styles.title}>Logga in</Text>\n        ) : (\n          <Text style={styles.title}>Bli medlem</Text>\n        )}\n      </View>\n      <ScrollView>\n        <Input\n          style={styles.input}\n          label=\"E-mail\"\n          onUpdateValue={updateInputValueHandler.bind(this, \"email\")}\n          value={enteredEmail}\n          keyboardType=\"email-address\"\n          isInvalid={emailIsInvalid}\n          placeholder=\"exempel@gmail.com\"\n          placeholderTextColor={Colors.green}\n        />\n\n        <Input\n          style={styles.input}\n          label=\"Lösenord\"\n          onUpdateValue={updateInputValueHandler.bind(this, \"password\")}\n          secure\n          value={enteredPassword}\n          isInvalid={passwordIsInvalid}\n          placeholder=\"Lösenord\"\n          placeholderTextColor={Colors.green}\n        />\n        {isLogin && (\n          <View style={styles.flat}>\n            <FlatButton>Glömt lösenordet?</FlatButton>\n          </View>\n        )}\n        {!isLogin && (\n          <Input\n            label=\"Bekräfta ditt lösenord\"\n            onUpdateValue={updateInputValueHandler.bind(\n              this,\n              \"confirmPassword\"\n            )}\n            secure\n            placeholder=\"Lösenord\"\n            value={enteredConfirmPassword}\n            isInvalid={passwordsDontMatch}\n            placeholderTextColor={Colors.green}\n          />\n        )}\n        <View style={styles.buttons}>\n          <FlatButton onPress={submitHandler} style={styles.flatbutton}>\n            {isLogin ? \"Logga in\" : \"Bli medlem\"}\n          </FlatButton>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nexport default AuthForm;\n\nconst styles = StyleSheet.create({\n  titleContainer: {\n    maxHeight: 300,\n    marginTop: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: 20,\n    color: Colors.green,\n    fontWeight: \"bold\",\n    marginBottom: 30,\n  },\n  imageTitle: {\n    width: \"50%\",\n    height: \"50%\",\n    resizeMode: \"contain\",\n    marginTop: 0,\n  },\n  flat: {\n    alignItems: \"flex-end\",\n    paddingVertical: 0,\n    marginVertical: 0,\n    justifyContent: \"flex-end\",\n  },\n  buttons: {\n    backgroundColor: Colors.greywhite,\n    borderRadius: 120,\n    paddingVertical: 10,\n\n    borderColor: \"black\",\n    borderWidth: 1,\n  },\n  flatbutton: {\n    color: Colors.green,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}