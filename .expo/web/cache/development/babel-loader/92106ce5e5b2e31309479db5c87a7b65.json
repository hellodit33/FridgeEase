{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { launchCameraAsync, useCameraPermissions, PermissionStatus } from \"expo-image-picker\";\nimport Colors from \"../../../constants/Colors\";\nimport { useState } from \"react\";\nimport OutlinedButton from \"../OutlinedButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ImagePicker(_ref) {\n  var onTakePic = _ref.onTakePic;\n\n  var _useCameraPermissions = useCameraPermissions(),\n      _useCameraPermissions2 = _slicedToArray(_useCameraPermissions, 2),\n      cameraPermissionsInformation = _useCameraPermissions2[0],\n      requestPermission = _useCameraPermissions2[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      pickedImage = _useState2[0],\n      setPickedImage = _useState2[1];\n\n  function verifyPermissions() {\n    return _verifyPermissions.apply(this, arguments);\n  }\n\n  function _verifyPermissions() {\n    _verifyPermissions = _asyncToGenerator(function* () {\n      if (cameraPermissionsInformation.status === PermissionStatus.UNDETERMINED) {\n        var permissionResponse = yield requestPermission();\n        return permissionResponse.granted;\n      }\n\n      if (cameraPermissionsInformation.status === PermissionStatus.DENIED) {\n        Alert.alert(\"Insufficient Permissions\", \"You need to grant camera permissions to use this app.\");\n        return false;\n      }\n\n      return true;\n    });\n    return _verifyPermissions.apply(this, arguments);\n  }\n\n  function takePicHandler() {\n    return _takePicHandler.apply(this, arguments);\n  }\n\n  function _takePicHandler() {\n    _takePicHandler = _asyncToGenerator(function* () {\n      var hasPermission = yield verifyPermissions();\n\n      if (!hasPermission) {\n        return;\n      }\n\n      var image = yield launchCameraAsync({\n        allowsEditing: true,\n        aspect: [16, 9],\n        quality: 0.5\n      });\n      setPickedImage(image.uri);\n      onTakePic(image.uri);\n    });\n    return _takePicHandler.apply(this, arguments);\n  }\n\n  var imagePreview = _jsx(Text, {\n    children: \"No image taken yet.\"\n  });\n\n  if (pickedImage) {\n    imagePreview = _jsx(Image, {\n      style: styles.image,\n      source: {\n        uri: pickedImage\n      }\n    });\n  }\n\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.imagePreview,\n      children: imagePreview\n    }), _jsx(OutlinedButton, {\n      icon: \"camera\",\n      onPress: takePicHandler,\n      children: \"Ta en bild\"\n    })]\n  });\n}\n\nexport default ImagePicker;\nvar styles = StyleSheet.create({\n  imagePreview: {\n    width: \"100%\",\n    height: 200,\n    marginVertical: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.red,\n    borderRadius: 4\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\"\n  }\n});","map":{"version":3,"names":["launchCameraAsync","useCameraPermissions","PermissionStatus","Colors","useState","OutlinedButton","ImagePicker","onTakePic","cameraPermissionsInformation","requestPermission","pickedImage","setPickedImage","verifyPermissions","status","UNDETERMINED","permissionResponse","granted","DENIED","Alert","alert","takePicHandler","hasPermission","image","allowsEditing","aspect","quality","uri","imagePreview","styles","StyleSheet","create","width","height","marginVertical","justifyContent","alignItems","backgroundColor","red","borderRadius"],"sources":["/Users/elodiepradet/Documents/react native/Fridgeease/src/components/Quotes/ImagePicker.js"],"sourcesContent":["import { View, Button, Alert, Image, StyleSheet, Text } from \"react-native\";\n\nimport {\n  launchCameraAsync,\n  useCameraPermissions,\n  PermissionStatus,\n} from \"expo-image-picker\";\nimport Colors from \"../../../constants/Colors\";\nimport { useState } from \"react\";\nimport OutlinedButton from \"../OutlinedButton\";\nfunction ImagePicker({ onTakePic }) {\n  const [cameraPermissionsInformation, requestPermission] =\n    useCameraPermissions();\n\n  const [pickedImage, setPickedImage] = useState();\n\n  async function verifyPermissions() {\n    if (cameraPermissionsInformation.status === PermissionStatus.UNDETERMINED) {\n      const permissionResponse = await requestPermission();\n      return permissionResponse.granted;\n    }\n\n    if (cameraPermissionsInformation.status === PermissionStatus.DENIED) {\n      Alert.alert(\n        \"Insufficient Permissions\",\n        \"You need to grant camera permissions to use this app.\"\n      );\n      return false;\n    }\n    return true;\n  }\n  async function takePicHandler() {\n    const hasPermission = await verifyPermissions();\n\n    if (!hasPermission) {\n      return;\n    }\n    const image = await launchCameraAsync({\n      allowsEditing: true,\n      aspect: [16, 9],\n      quality: 0.5,\n    });\n    setPickedImage(image.uri);\n    onTakePic(image.uri);\n  }\n\n  let imagePreview = <Text>No image taken yet.</Text>;\n\n  if (pickedImage) {\n    imagePreview = <Image style={styles.image} source={{ uri: pickedImage }} />;\n  }\n  return (\n    <View>\n      <View style={styles.imagePreview}>{imagePreview}</View>\n      <OutlinedButton icon=\"camera\" onPress={takePicHandler}>\n        Ta en bild\n      </OutlinedButton>\n    </View>\n  );\n}\nexport default ImagePicker;\n\nconst styles = StyleSheet.create({\n  imagePreview: {\n    width: \"100%\",\n    height: 200,\n    marginVertical: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.red,\n    borderRadius: 4,\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n});\n"],"mappings":";;;;;;;;AAEA,SACEA,iBADF,EAEEC,oBAFF,EAGEC,gBAHF,QAIO,mBAJP;AAKA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP;;;;AACA,SAASC,WAAT,OAAoC;EAAA,IAAbC,SAAa,QAAbA,SAAa;;EAClC,4BACEN,oBAAoB,EADtB;EAAA;EAAA,IAAOO,4BAAP;EAAA,IAAqCC,iBAArC;;EAGA,gBAAsCL,QAAQ,EAA9C;EAAA;EAAA,IAAOM,WAAP;EAAA,IAAoBC,cAApB;;EAJkC,SAMnBC,iBANmB;IAAA;EAAA;;EAAA;IAAA,uCAMlC,aAAmC;MACjC,IAAIJ,4BAA4B,CAACK,MAA7B,KAAwCX,gBAAgB,CAACY,YAA7D,EAA2E;QACzE,IAAMC,kBAAkB,SAASN,iBAAiB,EAAlD;QACA,OAAOM,kBAAkB,CAACC,OAA1B;MACD;;MAED,IAAIR,4BAA4B,CAACK,MAA7B,KAAwCX,gBAAgB,CAACe,MAA7D,EAAqE;QACnEC,KAAK,CAACC,KAAN,CACE,0BADF,EAEE,uDAFF;QAIA,OAAO,KAAP;MACD;;MACD,OAAO,IAAP;IACD,CApBiC;IAAA;EAAA;;EAAA,SAqBnBC,cArBmB;IAAA;EAAA;;EAAA;IAAA,oCAqBlC,aAAgC;MAC9B,IAAMC,aAAa,SAAST,iBAAiB,EAA7C;;MAEA,IAAI,CAACS,aAAL,EAAoB;QAClB;MACD;;MACD,IAAMC,KAAK,SAAStB,iBAAiB,CAAC;QACpCuB,aAAa,EAAE,IADqB;QAEpCC,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAF4B;QAGpCC,OAAO,EAAE;MAH2B,CAAD,CAArC;MAKAd,cAAc,CAACW,KAAK,CAACI,GAAP,CAAd;MACAnB,SAAS,CAACe,KAAK,CAACI,GAAP,CAAT;IACD,CAlCiC;IAAA;EAAA;;EAoClC,IAAIC,YAAY,GAAG,KAAC,IAAD;IAAA;EAAA,EAAnB;;EAEA,IAAIjB,WAAJ,EAAiB;IACfiB,YAAY,GAAG,KAAC,KAAD;MAAO,KAAK,EAAEC,MAAM,CAACN,KAArB;MAA4B,MAAM,EAAE;QAAEI,GAAG,EAAEhB;MAAP;IAApC,EAAf;EACD;;EACD,OACE,MAAC,IAAD;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEkB,MAAM,CAACD,YAApB;MAAA,UAAmCA;IAAnC,EADF,EAEE,KAAC,cAAD;MAAgB,IAAI,EAAC,QAArB;MAA8B,OAAO,EAAEP,cAAvC;MAAA;IAAA,EAFF;EAAA,EADF;AAQD;;AACD,eAAed,WAAf;AAEA,IAAMsB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BH,YAAY,EAAE;IACZI,KAAK,EAAE,MADK;IAEZC,MAAM,EAAE,GAFI;IAGZC,cAAc,EAAE,CAHJ;IAIZC,cAAc,EAAE,QAJJ;IAKZC,UAAU,EAAE,QALA;IAMZC,eAAe,EAAEjC,MAAM,CAACkC,GANZ;IAOZC,YAAY,EAAE;EAPF,CADiB;EAU/BhB,KAAK,EAAE;IACLS,KAAK,EAAE,MADF;IAELC,MAAM,EAAE;EAFH;AAVwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}