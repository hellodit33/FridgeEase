{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useContext } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from \"axios\";\nimport AuthContent from \"../components/Auth/AuthContent\";\nimport LoadingOverlay from \"../UI/LoadingOverlay\";\nimport { useDispatch } from \"react-redux\";\nimport * as authAction from \"../../store/redux/actions/auth.actions\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AuthContext } from \"../components/AppContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction LoginScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuthenticating = _useState2[0],\n      setIsAuthenticating = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      login = _useContext.login;\n\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var loginHandler = function () {\n    var _ref2 = _asyncToGenerator(function* (_ref) {\n      var email = _ref.email,\n          password = _ref.password;\n      login({\n        email: email,\n        password: password\n      });\n    });\n\n    return function loginHandler(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsx(_Fragment, {\n    children: _jsx(AuthContent, {\n      isLogin: true,\n      onAuthenticate: loginHandler\n    })\n  });\n}\n\nexport default LoginScreen;","map":{"version":3,"names":["useState","useContext","axios","AuthContent","LoadingOverlay","useDispatch","authAction","useNavigation","AsyncStorage","AuthContext","LoginScreen","isAuthenticating","setIsAuthenticating","login","dispatch","navigation","loginHandler","email","password"],"sources":["/Users/elodiepradet/Documents/react native/Fridgeease/src/screens/LoginScreen.js"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { Alert, View, Text } from \"react-native\";\nimport axios from \"axios\";\nimport AuthContent from \"../components/Auth/AuthContent\";\nimport LoadingOverlay from \"../UI/LoadingOverlay\";\nimport { useDispatch } from \"react-redux\";\nimport * as authAction from \"../../store/redux/actions/auth.actions\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AuthContext } from \"../components/AppContext\";\nfunction LoginScreen() {\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\n  const { login } = useContext(AuthContext);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const loginHandler = async ({ email, password }) => {\n    /*dispatch(authAction.loginUser({ email, password }))\n      .then(async (result) => {\n        console.log(result);\n        if (result.success) {\n          try {\n            const token = await AsyncStorage.setItem(\"token\", result.token);\n            console.log(result.success);\n           \n          } catch (err) {\n            console.log(err);\n          }\n        } else {\n          Alert.alert(\n            \"Authentication failed\",\n            \"Could not log you in :( Please check your credentials or try again later.\"\n          );\n          setIsAuthenticating(false);\n        }\n      })\n\n      .catch((err) => console.log(err));\n  };\n\n  if (isAuthenticating) {\n    return <LoadingOverlay message=\"Vi loggar in dig...\" />;\n  }*/\n    login({ email, password });\n  };\n\n  return (\n    <>\n      <AuthContent isLogin onAuthenticate={loginHandler} />\n    </>\n  );\n}\n\nexport default LoginScreen;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,UAAZ;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT;;;;AACA,SAASC,WAAT,GAAuB;EACrB,gBAAgDV,QAAQ,CAAC,KAAD,CAAxD;EAAA;EAAA,IAAOW,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,kBAAkBX,UAAU,CAACQ,WAAD,CAA5B;EAAA,IAAQI,KAAR,eAAQA,KAAR;;EACA,IAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,IAAMU,UAAU,GAAGR,aAAa,EAAhC;;EACA,IAAMS,YAAY;IAAA,8BAAG,iBAA+B;MAAA,IAAtBC,KAAsB,QAAtBA,KAAsB;MAAA,IAAfC,QAAe,QAAfA,QAAe;MA2BlDL,KAAK,CAAC;QAAEI,KAAK,EAALA,KAAF;QAASC,QAAQ,EAARA;MAAT,CAAD,CAAL;IACD,CA5BiB;;IAAA,gBAAZF,YAAY;MAAA;IAAA;EAAA,GAAlB;;EA8BA,OACE;IAAA,UACE,KAAC,WAAD;MAAa,OAAO,MAApB;MAAqB,cAAc,EAAEA;IAArC;EADF,EADF;AAKD;;AAED,eAAeN,WAAf"},"metadata":{},"sourceType":"module"}