{"ast":null,"code":"import { useContext, useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport axios from \"axios\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faHouseChimneyUser, faUtensils, faCartShopping, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport \"@fortawesome/free-solid-svg-icons\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Colors from \"./constants/Colors\";\nimport SuggestionItem from \"./src/screens/SuggestionItem\";\nimport SuggestionInput from \"./src/screens/SuggestionInput\";\nimport Shopping from \"./src/screens/Shopping\";\nimport RecipesOverview from \"./src/screens/RecipesOverview\";\nimport Recipes from \"./src/screens/Recipes\";\nimport RecipeInDetail from \"./src/screens/RecipeInDetail\";\nimport Fridge from \"./src/screens/Fridge\";\nimport MyFridge from \"./src/screens/MyFridge\";\nimport IconButton from \"./src/components/IcoButton\";\nimport User from \"./src/screens/User\";\nimport RateItem from \"./src/screens/RateItem\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport SignupScreen from \"./src/screens/SignupScreen\";\nimport AddQuote from \"./src/screens/AddQuote\";\nimport AllQuotes from \"./src/screens/AllQuotes\";\nimport Map from \"./src/screens/Map\";\nimport QuoteDetails from \"./src/screens/QuoteDetails\";\nimport FavoriteRecipes from \"./src/screens/FavoriteRecipes\";\nimport RecipesDetails from \"./src/screens/RecipesDetails\";\nimport Header from \"./src/components/Header\";\nimport FoodDetails from \"./src/components/FoodDetails\";\nimport Diets from \"./src/screens/Diets\";\nimport Allergies from \"./src/screens/Allergies\";\nimport LoadingOverlay from \"./src/UI/LoadingOverlay\";\nimport { AuthContext, AuthProvider, UidContext } from \"./src/components/AppContext\";\nimport { getUser, getUserFood } from \"./store/redux/actions/user.actions\";\nimport { useDispatch } from \"react-redux\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar BottomTabs = createBottomTabNavigator();\n\nfunction AuthStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerTitle: \"Fridge Ease\",\n      headerShown: false,\n      headerStyle: {\n        backgroundColor: Colors.blue\n      },\n      headerTintColor: \"white\",\n      contentStyle: {\n        backgroundColor: Colors.blue\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        title: \"Logga in\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen\n    })]\n  });\n}\n\nfunction BottomNav() {\n  return _jsxs(BottomTabs.Navigator, {\n    initialRouteName: \"Fridge\",\n    screenOptions: function screenOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerTitleAlign: \"center\",\n        headerStyle: {\n          backgroundColor: Colors.blue\n        },\n        headerTintColor: \"white\",\n        tabBarStyle: {\n          backgroundColor: Colors.blue\n        },\n        tabBarActiveTintColor: Colors.green,\n        tabBarInactiveTintColor: Colors.green,\n        tabBarActiveBackgroundColor: Colors.darkblue\n      };\n    },\n    children: [_jsx(BottomTabs.Screen, {\n      name: \"Fridge\",\n      component: Fridge,\n      options: {\n        title: \"Mitt kylskåp\",\n        headerTitle: function headerTitle() {\n          return _jsx(Header, {\n            title: \"Mitt kylsk\\xE5p\"\n          });\n        },\n        headerStyle: {\n          backgroundColor: Colors.blue\n        },\n        tabBarIcon: function tabBarIcon() {\n          return _jsx(FontAwesomeIcon, {\n            icon: faHouseChimneyUser,\n            color: Colors.green,\n            size: 24\n          });\n        }\n      }\n    }), _jsx(BottomTabs.Screen, {\n      name: \"Recipes\",\n      component: Recipes,\n      options: {\n        title: \"Mina recept\",\n        headerTitle: function headerTitle() {\n          return _jsx(Header, {\n            title: \"Mina recept\"\n          });\n        },\n        tabBarIcon: function tabBarIcon() {\n          return _jsx(FontAwesomeIcon, {\n            icon: faUtensils,\n            color: Colors.green,\n            size: 24\n          });\n        }\n      }\n    }), _jsx(BottomTabs.Screen, {\n      name: \"Shopping\",\n      component: Shopping,\n      options: {\n        title: \"Min inköpslista\",\n        headerTitle: function headerTitle() {\n          return _jsx(Header, {\n            title: \"Min ink\\xF6pslista\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          return _jsx(FontAwesomeIcon, {\n            icon: faCartShopping,\n            color: Colors.green,\n            size: 24\n          });\n        }\n      }\n    }), _jsx(BottomTabs.Screen, {\n      name: \"Profile\",\n      component: User,\n      options: {\n        title: \"Min profil\",\n        headerTitle: function headerTitle() {\n          return _jsx(Header, {\n            title: \"Min sida\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n          return _jsx(FontAwesomeIcon, {\n            icon: faUser,\n            color: Colors.green,\n            size: 24\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction DrawerNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.blue\n      },\n      headerTintColor: \"grey\",\n      sceneContainerStyle: {\n        backgroundColor: \"white\"\n      },\n      drawerContentStyle: {\n        backgroundColor: \"white\"\n      },\n      drawerInactiveTintColor: \"purple\",\n      drawerActiveTintColor: \"black\",\n      drawerActiveBackgroundColor: \"purple\"\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Shopping\",\n      component: Shopping,\n      options: {\n        title: \"Inköpslista\",\n        drawerIcon: function drawerIcon(_ref4) {\n          var color = _ref4.color,\n              size = _ref4.size;\n          return _jsx(Ionicons, {\n            name: \"calendar\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        title: \"Min sida\",\n        drawerIcon: function drawerIcon(_ref5) {\n          var color = _ref5.color,\n              size = _ref5.size;\n          return _jsx(Ionicons, {\n            name: \"book\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction AuthenticatedStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: Colors.blue\n      },\n      contentStyle: {\n        backgroundColor: Colors.blue\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"BottomTabss\",\n      component: BottomNav,\n      options: {\n        headerStyle: {\n          backgroundColor: Colors.blue\n        },\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Drawer\",\n      component: DrawerNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"RecipeInDetail\",\n      component: RecipeInDetail\n    }), _jsx(Stack.Screen, {\n      name: \"RecipesOverview\",\n      component: RecipesOverview\n    }), _jsx(Stack.Screen, {\n      name: \"RecipesDetails\",\n      component: RecipesDetails\n    }), _jsx(Stack.Screen, {\n      name: \"RateItem\",\n      component: RateItem,\n      options: {\n        presentation: \"modal\",\n        title: \"Ge ett betyg\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AddQuote\",\n      component: AddQuote,\n      options: {\n        title: \"Lägg till ett foto på ett citat\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"AllQuotes\",\n      component: AllQuotes,\n      options: function options(_ref6) {\n        var navigation = _ref6.navigation;\n        return {\n          title: \"Se alla citat\",\n          headerRight: function headerRight() {\n            return _jsx(IconButton, {\n              icon: \"add\",\n              size: 24,\n              color: \"white\",\n              onPress: function onPress() {\n                return navigation.navigate(\"AddQuote\");\n              }\n            });\n          }\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"QuoteDetails\",\n      component: QuoteDetails,\n      options: {\n        title: \"Citatet\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"FavoriteRecipes\",\n      component: FavoriteRecipes,\n      options: {\n        title: \"Mina favoritrecept\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Diets\",\n      component: Diets,\n      options: {\n        title: \"Min kost\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Allergies\",\n      component: Allergies,\n      options: {\n        title: \"Mina allergier\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"FoodDetails\",\n      component: FoodDetails,\n      options: {\n        title: \"Food Details\"\n      }\n    })]\n  });\n}\n\nfunction Navigation() {\n  var _useContext = useContext(AuthContext),\n      isLoading = _useContext.isLoading,\n      userToken = _useContext.userToken,\n      uid = _useContext.uid,\n      userFoodTrue = _useContext.userFoodTrue;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    console.log(uid);\n    console.log(\"hello\");\n\n    if (uid) {\n      dispatch(getUser(uid));\n    }\n  }, [uid]);\n\n  if (isLoading) {\n    return _jsx(LoadingOverlay, {\n      message: \"Ge oss en kort stund...\"\n    });\n  }\n\n  return _jsx(NavigationContainer, {\n    children: userToken !== null ? _jsx(FavoritesContextProvider, {\n      children: _jsx(AuthenticatedStack, {})\n    }) : _jsx(AuthStack, {})\n  });\n}\n\nfunction Root() {\n  return _jsx(AuthProvider, {\n    children: _jsx(Navigation, {})\n  });\n}\n\nimport { fetchFood } from \"./store/redux/actions/fridge.actions\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/redux/reducers\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { fetchRecipes } from \"./store/redux/actions/recipe.actions\";\nimport FavoritesContextProvider from \"./store/context/favorites-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar store = configureStore({\n  reducer: rootReducer\n});\nstore.dispatch(fetchFood());\nstore.dispatch(fetchRecipes());\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsx(Provider, {\n      store: store,\n      children: _jsx(Root, {})\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  root: {\n    backgroundColor: Colors.blue\n  }\n});","map":{"version":3,"names":["useContext","useEffect","useState","NavigationContainer","createNativeStackNavigator","axios","createBottomTabNavigator","AsyncStorage","createDrawerNavigator","Ionicons","FontAwesomeIcon","faHouseChimneyUser","faUtensils","faCartShopping","faUser","Colors","SuggestionItem","SuggestionInput","Shopping","RecipesOverview","Recipes","RecipeInDetail","Fridge","MyFridge","IconButton","User","RateItem","LoginScreen","SignupScreen","AddQuote","AllQuotes","Map","QuoteDetails","FavoriteRecipes","RecipesDetails","Header","FoodDetails","Diets","Allergies","LoadingOverlay","AuthContext","AuthProvider","UidContext","getUser","getUserFood","useDispatch","Stack","Drawer","BottomTabs","AuthStack","headerTitle","headerShown","headerStyle","backgroundColor","blue","headerTintColor","contentStyle","title","BottomNav","navigation","headerTitleAlign","tabBarStyle","tabBarActiveTintColor","green","tabBarInactiveTintColor","tabBarActiveBackgroundColor","darkblue","tabBarIcon","color","size","DrawerNavigator","sceneContainerStyle","drawerContentStyle","drawerInactiveTintColor","drawerActiveTintColor","drawerActiveBackgroundColor","drawerIcon","Profile","AuthenticatedStack","presentation","headerRight","navigate","Navigation","isLoading","userToken","uid","userFoodTrue","dispatch","console","log","Root","fetchFood","Provider","rootReducer","configureStore","StatusBar","fetchRecipes","FavoritesContextProvider","store","reducer","App","styles","StyleSheet","create","root"],"sources":["/Users/elodiepradet/Documents/react native/Fridgeease/App.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport axios from \"axios\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\n\nimport {\n  faHouseChimneyUser,\n  faUtensils,\n  faCartShopping,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  FlatList,\n  Button,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport Colors from \"./constants/Colors\";\n\nimport SuggestionItem from \"./src/screens/SuggestionItem\";\nimport SuggestionInput from \"./src/screens/SuggestionInput\";\nimport Shopping from \"./src/screens/Shopping\";\nimport RecipesOverview from \"./src/screens/RecipesOverview\";\nimport Recipes from \"./src/screens/Recipes\";\nimport RecipeInDetail from \"./src/screens/RecipeInDetail\";\nimport Fridge from \"./src/screens/Fridge\";\nimport MyFridge from \"./src/screens/MyFridge\";\n//import FavoritesContextProvider from \"./store/context/favorites-context\";\nimport IconButton from \"./src/components/IcoButton\";\n\nimport User from \"./src/screens/User\";\nimport RateItem from \"./src/screens/RateItem\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport SignupScreen from \"./src/screens/SignupScreen\";\nimport AddQuote from \"./src/screens/AddQuote\";\nimport AllQuotes from \"./src/screens/AllQuotes\";\nimport Map from \"./src/screens/Map\";\nimport QuoteDetails from \"./src/screens/QuoteDetails\";\nimport FavoriteRecipes from \"./src/screens/FavoriteRecipes\";\nimport RecipesDetails from \"./src/screens/RecipesDetails\";\nimport Header from \"./src/components/Header\";\nimport FoodDetails from \"./src/components/FoodDetails\";\nimport Diets from \"./src/screens/Diets\";\n\nimport Allergies from \"./src/screens/Allergies\";\nimport LoadingOverlay from \"./src/UI/LoadingOverlay\";\nimport {\n  AuthContext,\n  AuthProvider,\n  UidContext,\n} from \"./src/components/AppContext\";\nimport { getUser, getUserFood } from \"./store/redux/actions/user.actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\nconst BottomTabs = createBottomTabNavigator();\n\nfunction AuthStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerTitle: \"Fridge Ease\",\n        headerShown: false,\n        headerStyle: { backgroundColor: Colors.blue },\n        headerTintColor: \"white\",\n        contentStyle: { backgroundColor: Colors.blue },\n      }}\n    >\n      <Stack.Screen\n        name=\"Login\"\n        component={LoginScreen}\n        options={{ title: \"Logga in\" }}\n      />\n      <Stack.Screen name=\"Signup\" component={SignupScreen} />\n    </Stack.Navigator>\n  );\n}\n\nfunction BottomNav() {\n  // const authCtx = useContext(AuthContext);\n\n  return (\n    <BottomTabs.Navigator\n      initialRouteName=\"Fridge\"\n      screenOptions={({ navigation }) => ({\n        headerTitleAlign: \"center\",\n\n        headerStyle: { backgroundColor: Colors.blue },\n        headerTintColor: \"white\",\n        tabBarStyle: { backgroundColor: Colors.blue },\n        tabBarActiveTintColor: Colors.green,\n        tabBarInactiveTintColor: Colors.green,\n        tabBarActiveBackgroundColor: Colors.darkblue,\n      })}\n    >\n      <BottomTabs.Screen\n        name=\"Fridge\"\n        component={Fridge}\n        options={{\n          title: \"Mitt kylskåp\",\n          headerTitle: () => <Header title=\"Mitt kylskåp\" />,\n          headerStyle: { backgroundColor: Colors.blue },\n          tabBarIcon: () => (\n            <FontAwesomeIcon\n              icon={faHouseChimneyUser}\n              color={Colors.green}\n              size={24}\n            />\n          ),\n        }}\n      ></BottomTabs.Screen>\n      <BottomTabs.Screen\n        name=\"Recipes\"\n        component={Recipes}\n        options={{\n          title: \"Mina recept\",\n\n          headerTitle: () => <Header title=\"Mina recept\" />,\n          tabBarIcon: () => (\n            <FontAwesomeIcon icon={faUtensils} color={Colors.green} size={24} />\n          ),\n        }}\n      />\n\n      <BottomTabs.Screen\n        name=\"Shopping\"\n        component={Shopping}\n        options={{\n          title: \"Min inköpslista\",\n\n          headerTitle: () => <Header title=\"Min inköpslista\" />,\n          tabBarIcon: ({ color, size }) => (\n            <FontAwesomeIcon\n              icon={faCartShopping}\n              color={Colors.green}\n              size={24}\n            />\n          ),\n        }}\n      ></BottomTabs.Screen>\n\n      <BottomTabs.Screen\n        name=\"Profile\"\n        component={User}\n        options={{\n          title: \"Min profil\",\n\n          headerTitle: () => <Header title=\"Min sida\" />,\n          tabBarIcon: ({ color, size }) => (\n            <FontAwesomeIcon icon={faUser} color={Colors.green} size={24} />\n          ),\n        }}\n      ></BottomTabs.Screen>\n    </BottomTabs.Navigator>\n  );\n}\nfunction DrawerNavigator() {\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.blue },\n        headerTintColor: \"grey\",\n        sceneContainerStyle: { backgroundColor: \"white\" },\n        drawerContentStyle: { backgroundColor: \"white\" },\n        drawerInactiveTintColor: \"purple\",\n        drawerActiveTintColor: \"black\",\n        drawerActiveBackgroundColor: \"purple\",\n      }}\n    >\n      <Drawer.Screen\n        name=\"Shopping\"\n        component={Shopping}\n        options={{\n          title: \"Inköpslista\",\n          drawerIcon: ({ color, size }) => (\n            <Ionicons name=\"calendar\" color={color} size={size}></Ionicons>\n          ),\n        }}\n      ></Drawer.Screen>\n      <Drawer.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          title: \"Min sida\",\n          drawerIcon: ({ color, size }) => (\n            <Ionicons name=\"book\" color={color} size={size}></Ionicons>\n          ),\n        }}\n      ></Drawer.Screen>\n    </Drawer.Navigator>\n  );\n}\n\nfunction AuthenticatedStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: Colors.blue },\n\n        contentStyle: { backgroundColor: Colors.blue },\n      }}\n    >\n      <Stack.Screen\n        name=\"BottomTabss\"\n        component={BottomNav}\n        options={{\n          headerStyle: { backgroundColor: Colors.blue },\n          headerShown: false,\n        }}\n      />\n\n      <Stack.Screen\n        name=\"Drawer\"\n        component={DrawerNavigator}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen name=\"RecipeInDetail\" component={RecipeInDetail} />\n\n      <Stack.Screen name=\"RecipesOverview\" component={RecipesOverview} />\n      <Stack.Screen name=\"RecipesDetails\" component={RecipesDetails} />\n\n      <Stack.Screen\n        name=\"RateItem\"\n        component={RateItem}\n        options={{ presentation: \"modal\", title: \"Ge ett betyg\" }}\n      />\n      <Stack.Screen\n        name=\"AddQuote\"\n        component={AddQuote}\n        options={{ title: \"Lägg till ett foto på ett citat\" }}\n      />\n      <Stack.Screen\n        name=\"AllQuotes\"\n        component={AllQuotes}\n        options={({ navigation }) => ({\n          title: \"Se alla citat\",\n          headerRight: () => (\n            <IconButton\n              icon=\"add\"\n              size={24}\n              color={\"white\"}\n              onPress={() => navigation.navigate(\"AddQuote\")}\n            />\n          ),\n        })}\n      />\n\n      <Stack.Screen\n        name=\"QuoteDetails\"\n        component={QuoteDetails}\n        options={{ title: \"Citatet\" }}\n      />\n\n      <Stack.Screen\n        name=\"FavoriteRecipes\"\n        component={FavoriteRecipes}\n        options={{ title: \"Mina favoritrecept\" }}\n      />\n      <Stack.Screen\n        name=\"Diets\"\n        component={Diets}\n        options={{ title: \"Min kost\" }}\n      />\n      <Stack.Screen\n        name=\"Allergies\"\n        component={Allergies}\n        options={{ title: \"Mina allergier\" }}\n      />\n\n      <Stack.Screen\n        name=\"FoodDetails\"\n        component={FoodDetails}\n        options={{ title: \"Food Details\" }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction Navigation() {\n  const { isLoading, userToken, uid, userFoodTrue } = useContext(AuthContext);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(uid);\n    console.log(\"hello\");\n    if (uid) {\n      dispatch(getUser(uid));\n    }\n  }, [uid]);\n\n  if (isLoading) {\n    return <LoadingOverlay message=\"Ge oss en kort stund...\" />;\n  }\n  /* const authCtx = useContext(AuthContext);*/\n  /* const [uid, setUid] = useState(null);\n\n  const loadProfile = async () => {\n    const token = await AsyncStorage.getItem(\"token\");\n    const tokenJson = await token.toString();\n\n    await setUid(tokenJson);\n    console.log(tokenJson);\n    console.log(\"true\");\n  };\n\n  loadProfile();\n\n  /* \n  const [login, setLogIn] = useState(false);\n  const dispatch = useDispatch();\n\n  const fetchToken = async () => {\n    \n\nconst token = await AsyncStorage.getItem(\"token\")\n\n      .then(() => {\n        setUid(token);\n        console.log(uid);\n        console.log(\"hello\");\n      })\n      .catch((err) => console.log(\"No token\"));\n  };\n  useEffect(() => {\n    fetchToken();\n    if (uid) {\n      setLogIn(true);\n    }\n  }, [uid]);\n  /* const fetchToken = async () => {\n      await axios({\n        method: \"get\",\n        url: \"https://de63-213-163-151-83.eu.ngrok.io\",\n        withCredentials: true,\n      })\n        .then((res) => {\n          setUid(res.data);\n          console.log(uid);\n          console.log(\"hello\");\n        })\n        .catch((err) => console.log(\"No token\"));\n    };\n    fetchToken();\n    if (uid) {\n      dispatch(getUser(uid));\n      setLogIn(true);\n    }\n  }, [uid, dispatch]);*/\n  return (\n    <NavigationContainer>\n      {userToken !== null ? (\n        <FavoritesContextProvider>\n          <AuthenticatedStack /*value={uid} */ />\n        </FavoritesContextProvider>\n      ) : (\n        <AuthStack />\n      )}\n\n      {/*!authCtx.isAuthenticated && <AuthStack />*/}\n    </NavigationContainer>\n  );\n}\n\nfunction Root() {\n  /* const [isTryingLogin, setIsTryingLogin] = useState(true);\n  const authCtx = useContext(AuthContext);\n  useEffect(() => {\n    async function fetchToken() {\n      const storedToken = await AsyncStorage.getItem(\"token\");\n      if (storedToken) {\n        authCtx.authenticate(storedToken);\n        console.log(authCtx);\n      }\n      setIsTryingLogin(false);\n    }\n\n    fetchToken();\n  }, [authCtx]);\n  if (isTryingLogin) {\n    return <LoadingOverlay />;\n  }*/\n  return (\n    <AuthProvider>\n      <Navigation />\n    </AuthProvider>\n  );\n}\nimport { fetchFood } from \"./store/redux/actions/fridge.actions\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/redux/reducers\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { fetchRecipes } from \"./store/redux/actions/recipe.actions\";\nimport FavoritesContextProvider from \"./store/context/favorites-context\";\nconst store = configureStore({ reducer: rootReducer });\n\nstore.dispatch(fetchFood());\nstore.dispatch(fetchRecipes());\n\n/*\nif (uid) {\n  store.dispatch(getUserFood(uid));\n}*/\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"dark\" />\n\n      <Provider store={store}>\n        <Root />\n      </Provider>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: Colors.blue,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}