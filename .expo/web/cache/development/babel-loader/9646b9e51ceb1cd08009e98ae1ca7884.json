{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useLayoutEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport IcoButton from \"../components/IcoButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Map(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedLocation = _useState2[0],\n      setSelectedLocation = _useState2[1];\n\n  var region = {\n    latitude: 59.3251706,\n    longitude: 18.0705341,\n    latitudeDelta: 0.0952,\n    longitudeDelta: 0.0521\n  };\n\n  function selectLocationHandler(event) {\n    var lat = event.nativeEvent.coordinate.latitude;\n    var lng = event.nativeEvent.coordinate.longitude;\n    setSelectedLocation({\n      lat: lat,\n      lng: lng\n    });\n  }\n\n  var savePickedLocationHandler = useCallback(function () {\n    if (!selectedLocation) {\n      Alert.alert(\"No location picked!\", \"Pick a location by tapping on the map first\");\n      return;\n    }\n\n    navigation.navigate(\"Recipes\", {\n      pickedLat: selectedLocation.lat,\n      pickedLng: selectedLocation.lng\n    });\n  }, [navigation, selectedLocation]);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(IcoButton, {\n          icon: \"location\",\n          size: 24,\n          color: Colors.red,\n          onPress: savePickedLocationHandler\n        });\n      }\n    });\n  }, [navigation, savePickedLocationHandler]);\n  return _jsx(MapView, {\n    style: styles.map,\n    initialRegion: region,\n    onPress: selectLocationHandler,\n    children: selectedLocation && _jsx(Marker, {\n      title: \"Picked Location\",\n      coordinate: {\n        latitude: selectedLocation.lat,\n        longitude: selectedLocation.lng\n      }\n    })\n  });\n}\n\nexport default Map;\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useCallback","useLayoutEffect","useState","MapView","Marker","Colors","IcoButton","Map","navigation","selectedLocation","setSelectedLocation","region","latitude","longitude","latitudeDelta","longitudeDelta","selectLocationHandler","event","lat","nativeEvent","coordinate","lng","savePickedLocationHandler","Alert","alert","navigate","pickedLat","pickedLng","setOptions","headerRight","red","styles","map","StyleSheet","create","flex"],"sources":["/Users/elodiepradet/Documents/react native/Fridgeease/src/screens/Map.js"],"sourcesContent":["import { useCallback, useLayoutEffect, useState } from \"react\";\nimport { Alert, StyleSheet, Text } from \"react-native\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport IcoButton from \"../components/IcoButton\";\n\nfunction Map({ navigation }) {\n  const [selectedLocation, setSelectedLocation] = useState();\n\n  const region = {\n    latitude: 59.3251706,\n    longitude: 18.0705341,\n    latitudeDelta: 0.0952,\n    longitudeDelta: 0.0521,\n  };\n\n  function selectLocationHandler(event) {\n    const lat = event.nativeEvent.coordinate.latitude;\n    const lng = event.nativeEvent.coordinate.longitude;\n\n    setSelectedLocation({ lat: lat, lng: lng });\n  }\n\n  const savePickedLocationHandler = useCallback(() => {\n    if (!selectedLocation) {\n      Alert.alert(\n        \"No location picked!\",\n        \"Pick a location by tapping on the map first\"\n      );\n      return;\n    }\n    navigation.navigate(\"Recipes\", {\n      pickedLat: selectedLocation.lat,\n      pickedLng: selectedLocation.lng,\n    });\n  }, [navigation, selectedLocation]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <IcoButton\n          icon=\"location\"\n          size={24}\n          color={Colors.red}\n          onPress={savePickedLocationHandler}\n        />\n      ),\n    });\n  }, [navigation, savePickedLocationHandler]);\n\n  return (\n    <MapView\n      style={styles.map}\n      initialRegion={region}\n      onPress={selectLocationHandler}\n    >\n      {selectedLocation && (\n        <Marker\n          title=\"Picked Location\"\n          coordinate={{\n            latitude: selectedLocation.lat,\n            longitude: selectedLocation.lng,\n          }}\n        ></Marker>\n      )}\n    </MapView>\n  );\n}\n\nexport default Map;\n\nconst styles = StyleSheet.create({\n  map: { flex: 1 },\n});\n"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,QAAvC,QAAuD,OAAvD;;;;AAEA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;AACA,SAASC,MAAT,QAAuB,qCAAvB;AACA,OAAOC,SAAP;;;AAEA,SAASC,GAAT,OAA6B;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAC3B,gBAAgDN,QAAQ,EAAxD;EAAA;EAAA,IAAOO,gBAAP;EAAA,IAAyBC,mBAAzB;;EAEA,IAAMC,MAAM,GAAG;IACbC,QAAQ,EAAE,UADG;IAEbC,SAAS,EAAE,UAFE;IAGbC,aAAa,EAAE,MAHF;IAIbC,cAAc,EAAE;EAJH,CAAf;;EAOA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;IACpC,IAAMC,GAAG,GAAGD,KAAK,CAACE,WAAN,CAAkBC,UAAlB,CAA6BR,QAAzC;IACA,IAAMS,GAAG,GAAGJ,KAAK,CAACE,WAAN,CAAkBC,UAAlB,CAA6BP,SAAzC;IAEAH,mBAAmB,CAAC;MAAEQ,GAAG,EAAEA,GAAP;MAAYG,GAAG,EAAEA;IAAjB,CAAD,CAAnB;EACD;;EAED,IAAMC,yBAAyB,GAAGtB,WAAW,CAAC,YAAM;IAClD,IAAI,CAACS,gBAAL,EAAuB;MACrBc,KAAK,CAACC,KAAN,CACE,qBADF,EAEE,6CAFF;MAIA;IACD;;IACDhB,UAAU,CAACiB,QAAX,CAAoB,SAApB,EAA+B;MAC7BC,SAAS,EAAEjB,gBAAgB,CAACS,GADC;MAE7BS,SAAS,EAAElB,gBAAgB,CAACY;IAFC,CAA/B;EAID,CAZ4C,EAY1C,CAACb,UAAD,EAAaC,gBAAb,CAZ0C,CAA7C;EAcAR,eAAe,CAAC,YAAM;IACpBO,UAAU,CAACoB,UAAX,CAAsB;MACpBC,WAAW,EAAE;QAAA,OACX,KAAC,SAAD;UACE,IAAI,EAAC,UADP;UAEE,IAAI,EAAE,EAFR;UAGE,KAAK,EAAExB,MAAM,CAACyB,GAHhB;UAIE,OAAO,EAAER;QAJX,EADW;MAAA;IADO,CAAtB;EAUD,CAXc,EAWZ,CAACd,UAAD,EAAac,yBAAb,CAXY,CAAf;EAaA,OACE,KAAC,OAAD;IACE,KAAK,EAAES,MAAM,CAACC,GADhB;IAEE,aAAa,EAAErB,MAFjB;IAGE,OAAO,EAAEK,qBAHX;IAAA,UAKGP,gBAAgB,IACf,KAAC,MAAD;MACE,KAAK,EAAC,iBADR;MAEE,UAAU,EAAE;QACVG,QAAQ,EAAEH,gBAAgB,CAACS,GADjB;QAEVL,SAAS,EAAEJ,gBAAgB,CAACY;MAFlB;IAFd;EANJ,EADF;AAiBD;;AAED,eAAed,GAAf;AAEA,IAAMwB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC/BF,GAAG,EAAE;IAAEG,IAAI,EAAE;EAAR;AAD0B,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}