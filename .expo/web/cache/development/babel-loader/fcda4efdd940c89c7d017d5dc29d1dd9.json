{"ast":null,"code":"import { useContext, useLayoutEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BOOKS } from \"../data/data\";\nimport RecipeInDetail from \"./RecipeInDetail\";\nimport IconButton from \"../components/IcoButton\";\nimport { FavoritesContext } from \"../../store/context/favorites-context\";\nimport { useNavigation } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction RecipesDetails(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var toReadCtx = useContext(ToReadContext);\n  var bookId = route.params.bookId;\n  var selectedBook = BOOKS.find(function (book) {\n    return book.id === bookId;\n  });\n  var bookIsToRead = toReadCtx.ids.includes(bookId);\n\n  function rateItemHandler() {\n    navigation.navigate(\"RateItem\", {\n      bookId: bookId\n    });\n  }\n\n  function allQuotesHandler() {\n    navigation.navigate(\"AllQuotes\", {\n      bookId: bookId\n    });\n  }\n\n  function addQuoteHandler() {\n    navigation.navigate(\"AddQuote\", {\n      bookId: bookId\n    });\n  }\n\n  function toRead() {\n    if (bookIsToRead) {\n      toReadCtx.removeToRead(bookId);\n    } else {\n      toReadCtx.addToRead(bookId);\n    }\n  }\n\n  useLayoutEffect(function () {\n    var bookName = selectedBook.title;\n    navigation.setOptions({\n      title: bookName,\n      headerRight: function headerRight() {\n        return _jsx(IconButton, {\n          title: \"Att l\\xE4sa\",\n          onPress: toRead,\n          icon: bookIsToRead ? \"bookmark\" : \"bookmark-outline\",\n          color: \"white\"\n        });\n      }\n    });\n  }, [selectedBook, navigation, toRead]);\n  return _jsxs(ScrollView, {\n    children: [_jsx(Image, {\n      source: {\n        uri: selectedBook.imageUrl\n      }\n    }), _jsxs(View, {\n      children: [_jsx(RecipeInDetail, {\n        ratings: selectedBook.ratings,\n        pages: selectedBook.pages,\n        synopsis: selectedBook.synopsis,\n        textStyle: styles.textStyle\n      }), _jsx(Button, {\n        onPress: rateItemHandler,\n        title: \"Ge ett betyg\"\n      }), _jsx(Button, {\n        onPress: addQuoteHandler,\n        title: \"L\\xE4gg till ett citat\"\n      }), _jsx(Button, {\n        onPress: allQuotesHandler,\n        title: \"Se alla citat\"\n      })]\n    })]\n  });\n}\n\nexport default RecipesDetails;\nvar styles = StyleSheet.create({\n  image: {\n    width: \"100%\",\n    height: 350\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    margin: 8,\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  textStyle: {\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["useContext","useLayoutEffect","BOOKS","RecipeInDetail","IconButton","FavoritesContext","useNavigation","RecipesDetails","route","navigation","toReadCtx","ToReadContext","bookId","params","selectedBook","find","book","id","bookIsToRead","ids","includes","rateItemHandler","navigate","allQuotesHandler","addQuoteHandler","toRead","removeToRead","addToRead","bookName","title","setOptions","headerRight","uri","imageUrl","ratings","pages","synopsis","styles","textStyle","StyleSheet","create","image","width","height","fontWeight","fontSize","margin","textAlign","color"],"sources":["/Users/elodiepradet/Documents/react native/Fridgeease/src/screens/RecipesDetails.js"],"sourcesContent":["import { useContext, useLayoutEffect } from \"react\";\nimport {\n  Text,\n  View,\n  Image,\n  StyleSheet,\n  ScrollView,\n  Button,\n} from \"react-native\";\nimport { BOOKS } from \"../data/data\";\nimport RecipeInDetail from \"./RecipeInDetail\";\nimport IconButton from \"../components/IcoButton\";\nimport { FavoritesContext } from \"../../store/context/favorites-context\";\nimport { useNavigation } from \"react\";\n\nfunction RecipesDetails({ route, navigation }) {\n  const toReadCtx = useContext(ToReadContext);\n\n  const bookId = route.params.bookId;\n\n  const selectedBook = BOOKS.find((book) => book.id === bookId);\n\n  const bookIsToRead = toReadCtx.ids.includes(bookId);\n\n  function rateItemHandler() {\n    navigation.navigate(\"RateItem\", { bookId: bookId });\n  }\n\n  function allQuotesHandler() {\n    navigation.navigate(\"AllQuotes\", { bookId: bookId });\n  }\n  function addQuoteHandler() {\n    navigation.navigate(\"AddQuote\", { bookId: bookId });\n  }\n\n  function toRead() {\n    if (bookIsToRead) {\n      toReadCtx.removeToRead(bookId);\n    } else {\n      toReadCtx.addToRead(bookId);\n    }\n  }\n\n  useLayoutEffect(() => {\n    const bookName = selectedBook.title;\n\n    navigation.setOptions({\n      title: bookName,\n      headerRight: () => {\n        return (\n          <IconButton\n            title=\"Att läsa\"\n            onPress={toRead}\n            icon={bookIsToRead ? \"bookmark\" : \"bookmark-outline\"}\n            color=\"white\"\n          ></IconButton>\n        );\n      },\n    });\n  }, [selectedBook, navigation, toRead]);\n  return (\n    <ScrollView>\n      <Image source={{ uri: selectedBook.imageUrl }} />\n\n      <View>\n        <RecipeInDetail\n          ratings={selectedBook.ratings}\n          pages={selectedBook.pages}\n          synopsis={selectedBook.synopsis}\n          textStyle={styles.textStyle}\n        />\n        <Button onPress={rateItemHandler} title=\"Ge ett betyg\"></Button>\n        <Button onPress={addQuoteHandler} title=\"Lägg till ett citat\"></Button>\n        <Button onPress={allQuotesHandler} title=\"Se alla citat\"></Button>\n      </View>\n    </ScrollView>\n  );\n}\n\nexport default RecipesDetails;\n\nconst styles = StyleSheet.create({\n  image: {\n    width: \"100%\",\n    height: 350,\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 24,\n    margin: 8,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  textStyle: {\n    color: \"white\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}